# Define the parameters for a specific virtual host/server
server {
    listen 80;
    server_name backend.*;
    charset utf-8;
    # Add a robots.txt globally to disallow access to every user-agent
    location /robots.txt {return 200 "User-agent: *\nDisallow: /\n";}
    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains" always;

    return 301 https://$host$request_uri;

}

server {
    listen 443 ssl;
    server_name backend.*;
    # Define the specified charset to the “Content-Type” response header field
    charset utf-8;
    # from https://www.digitalocean.com/community/tutorials/how-to-create-a-self-signed-ssl-certificate-for-nginx-in-ubuntu-16-04
    # from https://cipherli.st/
    # and https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html
    # Using this as well https://blog.miguelgrinberg.com/post/running-your-flask-application-over-https
    #
    ssl_certificate /run/secrets/nginx_ssl.crt;
    ssl_certificate_key /run/secrets/nginx_ssl.key;
    ssl_dhparam /run/secrets/nginx_dhparam.pem;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
    ssl_ecdh_curve secp384r1;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    # Disable preloading HSTS for now.  You can use the commented out header line that includes
    # the "preload" directive if you understand the implications.
    #add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload";
    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains" always;
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;

    # Add a robots.txt globally to disallow access to every user-agent
    location /robots.txt {return 200 "User-agent: *\nDisallow: /\n";}

    # Configure NGINX to reverse proxy HTTP requests to the upstream server (Gunicorn (WSGI server))
    location / {
        # Define the location of the proxy server to send the request to
        proxy_pass http://web:8000;

        # Redefine the header fields that NGINX sends to the upstream server
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	 # WARNING NEVER USE THIS IF WE DON'T HAVE HTTPS SETUP ON THE FRONT END ELB
	proxy_set_header X-Forwarded-Proto https;
    	add_header Strict-Transport-Security "max-age=63072000; includeSubdomains" always;

	proxy_connect_timeout	300;
	proxy_send_timeout	300;
	proxy_read_timeout	300;
	send_timeout		300;

        # Define the maximum file size on file uploads
        client_max_body_size 5M;
        client_body_buffer_size 5M;
    }
}

